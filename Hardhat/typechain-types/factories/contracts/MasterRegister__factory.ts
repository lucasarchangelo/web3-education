/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MasterRegister,
  MasterRegisterInterface,
} from "../../contracts/MasterRegister";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_masterContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "deployEasyWay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "masterContract",
    outputs: [
      {
        internalType: "contract IMasterContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "validateStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161134b38038061134b833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b611234806101176000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ab824de014610046578063cd446e2214610062578063ebd477ca14610080575b600080fd5b610060600480360381019061005b9190610704565b61009c565b005b61006a6102e5565b60405161007791906107cc565b60405180910390f35b61009a60048036038101906100959190610825565b610309565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d84f55ee336040518263ffffffff1660e01b81526004016100f89190610861565b600060405180830381865afa158015610115573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013e9190610916565b511461017f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610176906109bc565b60405180910390fd5b600060405161018d9061059d565b604051809103906000f0801580156101a9573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663937f6e77836040518263ffffffff1660e01b81526004016101e59190610a20565b600060405180830381600087803b1580156101ff57600080fd5b505af1158015610213573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663187473ab3360006040518060400160405280600881526020017f52656769737465720000000000000000000000000000000000000000000000008152508560016040518663ffffffff1660e01b81526004016102af959493929190610a76565b600060405180830381600087803b1580156102c957600080fd5b505af11580156102dd573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d84f55ee336040518263ffffffff1660e01b81526004016103659190610861565b600060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103ab9190610916565b51146103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e3906109bc565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663937f6e776040518163ffffffff1660e01b815260040161042890610b42565b600060405180830381600087803b15801561044257600080fd5b505af1158015610456573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16635a9b0b896040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104ce9190610916565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663187473ab3360006040518060400160405280600881526020017f52656769737465720000000000000000000000000000000000000000000000008152508660006040518663ffffffff1660e01b8152600401610567959493929190610a76565b600060405180830381600087803b15801561058157600080fd5b505af1158015610595573d6000803e3d6000fd5b505050505050565b61069c80610b6383390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610611826105c8565b810181811067ffffffffffffffff821117156106305761062f6105d9565b5b80604052505050565b60006106436105aa565b905061064f8282610608565b919050565b600067ffffffffffffffff82111561066f5761066e6105d9565b5b610678826105c8565b9050602081019050919050565b82818337600083830152505050565b60006106a76106a284610654565b610639565b9050828152602081018484840111156106c3576106c26105c3565b5b6106ce848285610685565b509392505050565b600082601f8301126106eb576106ea6105be565b5b81356106fb848260208601610694565b91505092915050565b60006020828403121561071a576107196105b4565b5b600082013567ffffffffffffffff811115610738576107376105b9565b5b610744848285016106d6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061079261078d6107888461074d565b61076d565b61074d565b9050919050565b60006107a482610777565b9050919050565b60006107b682610799565b9050919050565b6107c6816107ab565b82525050565b60006020820190506107e160008301846107bd565b92915050565b60006107f28261074d565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a6105b4565b5b600061084984828501610810565b91505092915050565b61085b816107e7565b82525050565b60006020820190506108766000830184610852565b92915050565b60005b8381101561089a57808201518184015260208101905061087f565b60008484015250505050565b60006108b96108b484610654565b610639565b9050828152602081018484840111156108d5576108d46105c3565b5b6108e084828561087c565b509392505050565b600082601f8301126108fd576108fc6105be565b5b815161090d8482602086016108a6565b91505092915050565b60006020828403121561092c5761092b6105b4565b5b600082015167ffffffffffffffff81111561094a576109496105b9565b5b610956848285016108e8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f20637265617465206120757365722066697273742e600082015250565b60006109a660208361095f565b91506109b182610970565b602082019050919050565b600060208201905081810360008301526109d581610999565b9050919050565b600081519050919050565b60006109f2826109dc565b6109fc818561095f565b9350610a0c81856020860161087c565b610a15816105c8565b840191505092915050565b60006020820190508181036000830152610a3a81846109e7565b905092915050565b6000819050919050565b610a5581610a42565b82525050565b60008115159050919050565b610a7081610a5b565b82525050565b600060a082019050610a8b6000830188610852565b610a986020830187610a4c565b8181036040830152610aaa81866109e7565b9050610ab96060830185610852565b610ac66080830184610a67565b9695505050505050565b7f5b4d617374657252656769737465725d2056616c69646174696e67205265676960008201527f7374657220636f6e74726163742e000000000000000000000000000000000000602082015250565b6000610b2c602e8361095f565b9150610b3782610ad0565b604082019050919050565b60006020820190508181036000830152610b5b81610b1f565b905091905056fe608060405234801561001057600080fd5b5061067c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635a9b0b891461003b578063937f6e7714610059575b600080fd5b610043610075565b60405161005091906101aa565b60405180910390f35b610073600480360381019061006e9190610315565b610107565b005b6060600080546100849061038d565b80601f01602080910402602001604051908101604052809291908181526020018280546100b09061038d565b80156100fd5780601f106100d2576101008083540402835291602001916100fd565b820191906000526020600020905b8154815290600101906020018083116100e057829003601f168201915b5050505050905090565b80600090816101169190610574565b5050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610154578082015181840152602081019050610139565b60008484015250505050565b6000601f19601f8301169050919050565b600061017c8261011a565b6101868185610125565b9350610196818560208601610136565b61019f81610160565b840191505092915050565b600060208201905081810360008301526101c48184610171565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61022282610160565b810181811067ffffffffffffffff82111715610241576102406101ea565b5b80604052505050565b60006102546101cc565b90506102608282610219565b919050565b600067ffffffffffffffff8211156102805761027f6101ea565b5b61028982610160565b9050602081019050919050565b82818337600083830152505050565b60006102b86102b384610265565b61024a565b9050828152602081018484840111156102d4576102d36101e5565b5b6102df848285610296565b509392505050565b600082601f8301126102fc576102fb6101e0565b5b813561030c8482602086016102a5565b91505092915050565b60006020828403121561032b5761032a6101d6565b5b600082013567ffffffffffffffff811115610349576103486101db565b5b610355848285016102e7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103a557607f821691505b6020821081036103b8576103b761035e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103e3565b61042a86836103e3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061047161046c61046784610442565b61044c565b610442565b9050919050565b6000819050919050565b61048b83610456565b61049f61049782610478565b8484546103f0565b825550505050565b600090565b6104b46104a7565b6104bf818484610482565b505050565b5b818110156104e3576104d86000826104ac565b6001810190506104c5565b5050565b601f821115610528576104f9816103be565b610502846103d3565b81016020851015610511578190505b61052561051d856103d3565b8301826104c4565b50505b505050565b600082821c905092915050565b600061054b6000198460080261052d565b1980831691505092915050565b6000610564838361053a565b9150826002028217905092915050565b61057d8261011a565b67ffffffffffffffff811115610596576105956101ea565b5b6105a0825461038d565b6105ab8282856104e7565b600060209050601f8311600181146105de57600084156105cc578287015190505b6105d68582610558565b86555061063e565b601f1984166105ec866103be565b60005b82811015610614578489015182556001820191506020850194506020810190506105ef565b86831015610631578489015161062d601f89168261053a565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d6df22f2cf9afd68a3689e346e4a1f3e6137edb218b2e0165ce9f076467cfdb164736f6c63430008180033a264697066735822122054bbea08c1dea1107b3e22981c34ebd46931d570942f9a297e814204f9f0be1864736f6c63430008180033";

type MasterRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterRegister__factory extends ContractFactory {
  constructor(...args: MasterRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _masterContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_masterContract, overrides || {});
  }
  override deploy(
    _masterContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_masterContract, overrides || {}) as Promise<
      MasterRegister & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterRegister__factory {
    return super.connect(runner) as MasterRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterRegisterInterface {
    return new Interface(_abi) as MasterRegisterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MasterRegister {
    return new Contract(address, _abi, runner) as unknown as MasterRegister;
  }
}
